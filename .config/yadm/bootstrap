#!/bin/bash
BGBLACK="\e[40m"
LRED="\e[91m"
RESET="\e[0m"

echo
echo
echo -e "    ${BGBLACK}${LRED}*****************************************************************${RESET}"
echo -e "    ${BGBLACK}${LRED}*                                                               *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    This BOOTSTRAP script does the following:                  *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    - Install Ansible if its not already present               *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    - Grab a temporary copy of the mac_dev_playbook project    *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    - Install the prerequisites needed for the playbook        *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    - Run the playbook (MAY ASK FOR SUDO PASSWORD)             *${RESET}"
echo -e "    ${BGBLACK}${LRED}*    - Cleanup                                                  *${RESET}"
echo -e "    ${BGBLACK}${LRED}*                                                               *${RESET}"
echo -e "    ${BGBLACK}${LRED}*****************************************************************${RESET}"
echo
echo

echo "Installing Ansible if needed."
command -v ansible >/dev/null 2>&1
ANSIBLE_CHECK=$?
if [ $ANSIBLE_CHECK -eq 0 ]; then
    echo "Ansible is already installed."
else
    python3 -m pip install ansible-core
fi

echo "Cloning temporary copy of mac_dev_playbook."
mkdir -p ~/tmp/mac_dev_playbook
git clone https://github.com/deversmann/mac_dev_playbook ~/tmp/mac_dev_playbook

pushd ~/tmp/mac_dev_playbook
echo "Installing prerequisites for mac_dev_playbook."
ansible-galaxy install -r requirements.yml
echo "Running mac_dev_playbook."
if sudo -n true; then
    ansible-playbook main.yml
else
    ansible-playbook main.yml -K
fi
popd

echo "Cleaning up mac_dev_playbook"
rm -rf ~/tmp/mac_dev_playbook
